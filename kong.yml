version: '3.9'
#需要先进行数据库初始化
#docker-compose -f kong.yml run --rm -e "KONG_DATABASE=postgres" -e "KONG_PG_HOST=postgres" -e "KONG_PG_USER=root" -e "KONG_PG_PASSWORD=123456" kong kong migrations bootstrap
#或者先运行docker-compose -f kong.yml up kong-migrations
services:   
   kong:
      image: kong:2.6.0-alpine
      container_name: kong
      ports: 
         - 8000:8000
         - 8001:8001
         - 8443:8443
         - 8444:8444
      environment:
          #可以使用postgres,也可以使用cassandra
          - KONG_DATABASE=postgres
          - KONG_PG_HOST=postgres
          - KONG_PG_USER=root
          - KONG_PG_PASSWORD=123456
          - KONG_PROXY_ACCESS_LOG=/dev/stdout
          - KONG_ADMIN_ACCESS_LOG=/dev/stdout
          - KONG_PROXY_ERROR_LOG=/dev/stderr
          - KONG_ADMIN_ERROR_LOG=/dev/stderr 
          - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
   # 需要先创建kong的数据库
   kong-migrations:
      image: kong:2.6.0-alpine
      container_name: kong-migrations
      environment:
          #可以使用postgres,也可以使用cassandra
          - KONG_DATABASE=postgres
          - KONG_PG_HOST=postgres
          - KONG_PG_USER=root
          - KONG_PG_PASSWORD=123456
      command: kong migrations bootstrap
   #添加kong admin url    
   konga:
      image: pantsel/konga:0.14.9
      container_name: konga
      environment:
         - TOKEN_SECRET={{somerandomstring}}
         - DB_HOST=postgres
         - DB_USER=root
         - DB_PASSWORD=123456
         - DB_DATABASE=kong
         #默认为development,特别占cpu
         - NODE_ENV=production
      ports: 
        - 1337:1337

